{
  "name": "graph",
  "version": "0.2",
  "coreVersion": "0.2",
  "messages": [
    {
      "name": "createEntity",
      "description": "Request to create an entity, expecting the created entity in response.",
      "source": "block",
      "respondedToByMessage": "createEntityResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityTypeId": {
            "description": "The entityTypeId of the type of the entity to create",
            "type": "string"
          },
          "properties": {
            "description": "The properties of the entity to create",
            "type": "object"
          }
        },
        "required": ["entityTypeId", "properties"]
      },
      "errorCodes": []
    },
    {
      "name": "createEntityResponse",
      "description": "The response to a request to create an entity",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "https://blockprotocol.org/types/Entity"
          }
        },
        "required": ["entity"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT"]
    },
    {
      "name": "updateEntity",
      "description": "Request to update an entity, expecting the updated entity in response.",
      "source": "block",
      "respondedToByMessage": "updateEntityResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityId": {
            "description": "The entityId of the entity to update",
            "type": "string"
          },
          "properties": {
            "description": "The properties of the entity to update, which will be merged with any other properties on the entity",
            "type": "object"
          }
        },
        "required": ["entityId", "properties"]
      },
      "errorCodes": []
    },
    {
      "name": "updateEntityResponse",
      "description": "The response to a request to update an entity",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "https://blockprotocol.org/types/Entity"
          }
        },
        "required": ["entity"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "deleteEntity",
      "description": "Request to delete an entity, expecting a boolean in response.",
      "source": "block",
      "respondedToByMessage": "deleteEntityResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityId": {
            "description": "The entityId of the entity to delete",
            "type": "string"
          }
        },
        "required": ["entityId"]
      },
      "errorCodes": []
    },
    {
      "name": "deleteEntityResponse",
      "description": "The response to a request to delete an entity",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "boolean"
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "getEntity",
      "description": "Request to retrieve an entity, expecting the entity in response.",
      "source": "block",
      "respondedToByMessage": "getEntityResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityId": {
            "description": "The entityId of the entity to retrieve",
            "type": "string"
          }
        },
        "required": ["entityId"]
      },
      "errorCodes": []
    },
    {
      "name": "getEntityResponse",
      "description": "The response to a request to get an entity",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "https://blockprotocol.org/types/Entity"
          }
        },
        "required": ["entity"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "aggregateEntities",
      "description": "Request to retrieve an aggregation of entities.",
      "source": "block",
      "respondedToByMessage": "aggregateEntitiesResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "https://blockprotocol.org/types/LinkedAggregationOperation"
          }
        },
        "required": ["operation"]
      },
      "errorCodes": []
    },
    {
      "name": "aggregateEntitiesResponse",
      "description": "The response to a request to retrieve an aggregation of entities",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "https://blockprotocol.org/types/LinkedAggregationOperation"
          },
          "results": {
            "type": "array",
            "items": { "$ref": "https://blockprotocol.org/types/Entity" }
          }
        },
        "required": ["operation", "results"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT"]
    },
    {
      "name": "createEntityType",
      "description": "Request to create an entity type, expecting the created entity type in response.",
      "source": "block",
      "respondedToByMessage": "createEntityTypeResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "schema": {
            "description": "The schema of the entityType to create",
            "type": "object"
          }
        },
        "required": ["schema"]
      },
      "errorCodes": []
    },
    {
      "name": "createEntityTypeResponse",
      "description": "The response to a request to create an entityType",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "https://blockprotocol.org/types/EntityType"
          }
        },
        "required": ["entityType"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT"]
    },
    {
      "name": "updateEntityType",
      "description": "Request to update an entityType, expecting the updated entityType in response.",
      "source": "block",
      "respondedToByMessage": "updateEntityTypeResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityTypeId": {
            "description": "The entityTypeId of the entity to update",
            "type": "string"
          },
          "schema": {
            "description": "A partial schema to apply as an update, which will be merged with any other properties on the schema",
            "type": "object"
          }
        },
        "required": ["entityTypeId", "schema"]
      },
      "errorCodes": []
    },
    {
      "name": "updateEntityTypeResponse",
      "description": "The response to a request to update an entityType",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "https://blockprotocol.org/types/EntityType"
          }
        },
        "required": ["entityType"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "deleteEntityType",
      "description": "Request to delete an entityType, expecting a boolean in response.",
      "source": "block",
      "respondedToByMessage": "deleteEntityTypeResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityTypeId": {
            "description": "The entityTypeId of the entityType to delete",
            "type": "string"
          }
        },
        "required": ["entityTypeId"]
      },
      "errorCodes": []
    },
    {
      "name": "deleteEntityTypeResponse",
      "description": "The response to a request to delete an entityType",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "boolean"
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "getEntityType",
      "description": "Request to retrieve an entityType, expecting the entityType in response.",
      "source": "block",
      "respondedToByMessage": "getEntityTypeResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityTypeId": {
            "description": "The entityTypeId of the entityType to retrieve",
            "type": "string"
          }
        },
        "required": ["entityTypeId"]
      },
      "errorCodes": []
    },
    {
      "name": "getEntityTypeResponse",
      "description": "The response to a request to get an entityType",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "https://blockprotocol.org/types/EntityType"
          }
        },
        "required": ["entityType"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "aggregateEntityTypes",
      "description": "Request to retrieve an aggregation of entity types.",
      "source": "block",
      "respondedToByMessage": "aggregateEntityTypesResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "https://blockprotocol.org/types/LinkedAggregationOperation"
          }
        },
        "required": ["operation"]
      },
      "errorCodes": []
    },
    {
      "name": "aggregateEntityTypesResponse",
      "description": "The response to a request to retrieve an aggregation of entity types",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "operation": { "type": "object" },
          "results": {
            "type": "array",
            "items": { "$ref": "https://blockprotocol.org/types/EntityType" }
          }
        },
        "required": ["operation", "results"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT"]
    },
    {
      "name": "createLink",
      "description": "Request to create a link, expecting the created link in response.",
      "source": "block",
      "respondedToByMessage": "createLinkResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "sourceEntityId": { "type": "string" },
          "destinationEntityId": { "type": "string" },
          "index": { "type": "string" },
          "path": { "type": "string" }
        },
        "required": ["sourceEntityId", "destinationEntityId", "path"]
      },
      "errorCodes": []
    },
    {
      "name": "createLinkResponse",
      "description": "The response to a request to create a link",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "https://blockprotocol.org/types/Link"
          }
        },
        "required": ["link"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT"]
    },
    {
      "name": "updateLink",
      "description": "Request to update a link, expecting the updated link in response.",
      "source": "block",
      "respondedToByMessage": "updateLinkResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "linkId": {
            "description": "The linkId of the entity to update",
            "type": "string"
          },
          "index": {
            "description": "The new index the link should occupy in an ordered list of links",
            "type": "number"
          }
        },
        "required": ["linkId", "index"]
      },
      "errorCodes": []
    },
    {
      "name": "updateLinkResponse",
      "description": "The response to a request to update a link",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "https://blockprotocol.org/types/Link"
          }
        },
        "required": ["link"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "deleteLink",
      "description": "Request to delete a link, expecting a boolean in response.",
      "source": "block",
      "respondedToByMessage": "deleteLinkResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "linkId": {
            "description": "The linkId of the link to delete",
            "type": "string"
          }
        },
        "required": ["linkId"]
      },
      "errorCodes": []
    },
    {
      "name": "deleteLinkResponse",
      "description": "The response to a request to delete a link",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "boolean"
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "getLink",
      "description": "Request to retrieve a link, expecting the link in response.",
      "source": "block",
      "respondedToByMessage": "getLinkResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "linkId": {
            "description": "The linkId of the link to retrieve",
            "type": "string"
          }
        },
        "required": ["linkId"]
      },
      "errorCodes": []
    },
    {
      "name": "getLinkResponse",
      "description": "The response to a request to get a link",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "link": {
            "$ref": "https://blockprotocol.org/types/Link"
          }
        },
        "required": ["link"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "createLinkedAggregation",
      "description": "Request to create a linked aggregation, expecting the created linked aggregation in response.",
      "source": "block",
      "respondedToByMessage": "createLinkedAggregationResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "sourceEntityId": { "type": "string" },
          "operation": {
            "$ref": "https://blockprotocol.org/types/LinkedAggregationOperation"
          },
          "path": { "type": "string" }
        },
        "required": ["sourceEntityId", "operation", "path"]
      },
      "errorCodes": []
    },
    {
      "name": "createLinkedAggregationResponse",
      "description": "The response to a request to create a linkedAggregation",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "linkedAggregation": {
            "$ref": "https://blockprotocol.org/types/LinkedAggregation"
          }
        },
        "required": ["linkedAggregation"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT"]
    },
    {
      "name": "updateLinkedAggregation",
      "description": "Request to update a linkedAggregation, expecting the updated linkedAggregation in response.",
      "source": "block",
      "respondedToByMessage": "updateLinkedAggregationResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "aggregationId": {
            "description": "The aggregationId of the linkedAggregation to update",
            "type": "string"
          },
          "operation": {
            "description": "The new aggregation operation",
            "$ref": "https://blockprotocol.org/types/LinkedAggregationOperation"
          }
        },
        "required": ["aggregationId", "operation"]
      },
      "errorCodes": []
    },
    {
      "name": "updateLinkedAggregationResponse",
      "description": "The response to a request to update a linkedAggregation",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "linkedAggregation": {
            "$ref": "https://blockprotocol.org/types/LinkedAggregation"
          },
          "required": ["linkedAggregation"]
        }
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "deleteLinkedAggregation",
      "description": "Request to delete a linkedAggregation, expecting a boolean in response.",
      "source": "block",
      "respondedToByMessage": "deleteLinkedAggregationResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "aggregationId": {
            "description": "The aggregationId of the linkedAggregation to delete",
            "type": "string"
          }
        },
        "required": ["aggregationId"]
      },
      "errorCodes": []
    },
    {
      "name": "deleteLinkedAggregationResponse",
      "description": "The response to a request to delete a linkedAggregation",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "boolean"
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "getLinkedAggregation",
      "description": "Request to retrieve a linkedAggregation, expecting the linkedAggregation in response.",
      "source": "block",
      "respondedToByMessage": "getLinkedAggregationResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "aggregationId": {
            "description": "The aggregationId of the linkedAggregation to retrieve",
            "type": "string"
          }
        },
        "required": ["aggregationId"]
      },
      "errorCodes": []
    },
    {
      "name": "getLinkedAggregationResponse",
      "description": "The response to a request to get a linkedAggregation",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "linkedAggregation": {
            "$ref": "https://blockprotocol.org/types/LinkedAggregation"
          }
        },
        "required": ["linkedAggregation"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    },
    {
      "name": "uploadFile",
      "description": "Request to upload a file and create an entity to store metadata about it.",
      "source": "block",
      "respondedToByMessage": "uploadFileResponse",
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "file": {
            "description": "The file blob, if being uploaded directly. Either 'url' or 'file' is required."
          },
          "url": {
            "description": "The URL to take the file from, if not being uploaded directly. Either 'url' or 'file' is required.",
            "type": "string"
          },
          "mediaType": {
            "description": "The type of media file this is",
            "type": "string",
            "enum": ["image", "video"]
          }
        },
        "required": ["mediaType"]
      },
      "errorCodes": []
    },
    {
      "name": "uploadFileResponse",
      "description": "The response to a request to create an entity storing metadata about an uploaded file.",
      "source": "embedder",
      "respondedToByMessage": null,
      "sentOnInitialization": false,
      "data": {
        "type": "object",
        "properties": {
          "entityId": {
            "description": "The entityId of the entity storing metadata about the file."
          },
          "url": {
            "description": "The URL the file is now being served from.",
            "type": "string"
          },
          "mediaType": {
            "description": "The type of media file this is",
            "type": "string",
            "enum": ["image", "video"]
          }
        },
        "required": ["entityId", "mediaType", "url"]
      },
      "errorsCodes": ["FORBIDDEN", "INVALID_INPUT", "NOT_FOUND"]
    }
  ]
}
