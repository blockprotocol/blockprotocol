name: CI
on: pull_request

env:
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: true

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - run: yarn install

      - name: Run yarn lint:dependency-version-consistency
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:dependency-version-consistency; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Try running `yarn fix:dependency-version-consistency` locally to apply autofixes.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

      - name: Run yarn lint:eslint
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:eslint; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Try running `yarn fix:eslint` locally to apply autofixes.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

      - name: Run yarn lint:lockfile-lint
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:lockfile-lint; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Try resetting yarn.lock to its previous state and then run `yarn install`.'
            echo 'If your `~/.npmrc` mentions a custom registry, you should remove this setting first.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

      - name: Run yarn lint:markdownlint
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:markdownlint; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Try running `yarn fix:markdownlint` locally to apply autofixes.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

      - name: Run yarn lint:prettier
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:prettier; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Try running `yarn fix:prettier` locally to apply autofixes.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

      - name: Run yarn lint:tsc
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:tsc; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Please fix the above errors locally for the check to pass.'
            echo 'If you don’t see them, try merging target branch into yours.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

        ## TODO: Replace with `yarn fix:yarn-dedupe` after upgrading to Yarn v3+
        ## https://yarnpkg.com/cli/dedupe
        ## https://github.com/yarnpkg/berry/issues/2297
      - name: Run yarn lint:yarn-deduplicate
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:yarn-deduplicate; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Some dependencies can be deduplicated, which will make node_modules'
            echo 'lighter and potentially save us from unexplainable bugs.'
            echo 'Please run `yarn fix:yarn-deduplicate` locally and commit yarn.lock.'
            echo 'You may need to run the command 2-3 times in some rare cases.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

        ## yarn --frozen-lockfile does not work for monorepos, so using a workaround:
        ## https://github.com/yarnpkg/yarn/issues/5840#issuecomment-467516207
        ## TODO: Use `yarn install --immutable` after upgrading to Yarn v3+
      - name: Check yarn.lock stability
        if: ${{ success() || failure() }}
        run: |
          git diff yarn.lock
          if ! git diff --exit-code yarn.lock; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Changes were detected in yarn.lock file after running `yarn install`.'
            echo 'This makes runtime less stable, so should be avoided.'
            echo 'Please run `yarn install` locally and commit yarn.lock.'
            echo 'You may also want to run `yarn fix:yarn-deduplicate` just in case.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1;
          fi

  packages:
    name: NPM Packages
    runs-on: ubuntu-20.04
    env:
      BLOCK_NAME: test-block
      BLOCK_DIR_PATH: ~/test-block

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - name: Downgrade global NPM version
        run: npm install --global npm@8.4.1 ## https://github.com/blockprotocol/blockprotocol/pull/281

      - run: yarn install

      - name: Run local registry
        run: |
          docker pull verdaccio/verdaccio:5
          docker run -it --detach --rm --name verdaccio -p 4873:4873  verdaccio/verdaccio:5
          yarn wait-on --timeout 30000 http://localhost:4873

      - name: Publish NPM packages to local registry
        run: yarn exe scripts/packages/publish-to-local-registry.ts

      - name: Smoke-test create-block-app
        run: yarn exe scripts/packages/smoke-test-create-block-app.ts
        env:
          NPM_CONFIG_REGISTRY: http://localhost:4873

      - name: Show local registry logs and stop it
        if: ${{ success() || failure() }}
        run: |
          docker logs verdaccio
          docker stop verdaccio

      - name: Upload block folder as artifact
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: ${{ env.BLOCK_NAME }}
          path: |
            ${{ env.BLOCK_DIR_PATH }}
            !${{ env.BLOCK_DIR_PATH }}/node_modules/**

  site-integration-tests:
    name: "Site integration tests"
    runs-on: ubuntu-latest
    env:
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: false
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: site/.next/cache
          key: ${{ runner.os }}-site-next-cache-${{ hashFiles('yarn.lock') }}-${{ hashFiles('site/**') }}
          restore-keys: |
            ${{ runner.os }}-site-next-cache-${{ hashFiles('yarn.lock') }}-
            ${{ runner.os }}-site-next-cache

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - run: yarn install

      - name: Create temp files and folders
        run: |
          mkdir -p var/logs
          cat << EOF > site/.env.local
          SESSION_SECRET=dev-session-secret
          HASHING_SECRET=dev-hashing-secret

          MONGODB_URI=mongodb://root:password@localhost:27017/
          MONGODB_DB_NAME=local
          EOF

      - name: Launch DB
        if: ${{ success() || failure() }}
        run: |
          yarn dev:db 2>&1 | tee var/logs/db.log & ## ampersand enables background mode
          yarn wait-on --timeout 60000 tcp:0.0.0.0:27017

      - name: Seed DB
        if: ${{ success() || failure() }}
        run: yarn dev:seed-db

      - name: Build and launch frontend
        if: ${{ success() || failure() }}
        run: |
          yarn workspace @blockprotocol/site build
          yarn workspace @blockprotocol/site start 2>&1 | tee var/logs/frontend.log & ## ampersand enables background mode
          yarn wait-on --timeout 10000 http://0.0.0.0:3000

      - run: yarn playwright install-deps chrome
        if: ${{ success() || failure() }}

      - name: Run Playwright tests
        if: ${{ success() || failure() }}
        run: yarn workspace @blockprotocol/site playwright test --project=integration

      - name: Show DB logs
        if: ${{ success() || failure() }}
        run: cat var/logs/db.log

      - name: Show frontend logs
        if: ${{ success() || failure() }}
        run: cat var/logs/frontend.log

      - name: Upload artifact playwright-report
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: site-integration-tests-playwright-report
          path: site/playwright-report

      - name: Upload artifact playwright-var
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: site-integration-tests-var
          path: |
            var
